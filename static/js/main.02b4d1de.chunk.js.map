{"version":3,"sources":["sample.svg","components/onedrive-picker/index.tsx","components/onedrive-picker/utils.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ReactOneDriveFilePicker","clientID","onSuccess","onCancel","onError","action","multiSelect","children","React","mounted","scriptToAppend","script","document","createElement","src","async","body","appendChild","appendScript","scriptToremove","allsuspects","getElementsByTagName","i","length","getAttribute","indexOf","parentNode","removeChild","removeScript","onClick","e","preventDefault","oneDriveApplicationId","advancedOptions","Promise","resolve","reject","odOptions","clientId","openInNewWindow","advanced","success","files","cancel","error","OneDrive","open","launchOneDrivePicker","then","result","catch","reason","App","id","href","alert","JSON","stringify","logo","alt","width","style","color","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uLAAe,G,KAAA,IAA0B,oCC4I1BA,EA1C+C,SAAC,GAQxD,IAPLC,EAOI,EAPJA,SACAC,EAMI,EANJA,UACAC,EAKI,EALJA,SACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,YACAC,EACI,EADJA,SAYA,OAVAC,aAAgB,WACd,IAAIC,GAAU,EAId,OAHIA,GC7GoB,SAACC,GAC3B,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAAMJ,EACbC,EAAOI,OAAQ,EACfH,SAASI,KAAKC,YAAYN,GD0GtBO,CAAa,wCAER,WACLT,GAAU,EC1GY,SAACU,GAE3B,IADA,IAAIC,EAAcR,SAASS,qBAAqB,UACvCC,EAAIF,EAAYG,OAAQD,GAAK,EAAGA,IAAK,CAAC,IAAD,EAK1C,EAHAF,EAAYE,IAC2B,OAAvCF,EAAYE,GAAGE,aAAa,SAC0C,KAAtE,UAAAJ,EAAYE,GAAGE,aAAa,cAA5B,eAAoCC,QAApC,UAA+CN,OAE/C,UAAAC,EAAYE,GAAGI,kBAAf,SAA2BC,YAAYP,EAAYE,MDmGnDM,CAAa,2CAEd,CAAC3B,IAEF,sBACE4B,QAAS,SAACC,GACRA,EAAEC,iBAlDmB,SAC3BC,EACA1B,EACA2B,EACA5B,GAEA,OAAO,IAAI6B,SAA+B,SAACC,EAASC,GAClD,IAAIC,EAAiC,CACnCC,SAAUN,EACV3B,OAAQA,GAAU,WAClBC,YAAaA,EACbiC,iBAAiB,EACjBC,SAAUP,GAAmB,GAC7BQ,QAAS,SAACC,GACRP,EAAQO,IAEVC,OAAQ,WACNR,EAAQ,OAEVS,MAAO,SAACd,GACNM,EAAON,KAIXe,SAASC,KAAKT,MA2BVU,CAAqB9C,EAAUK,EAAaD,GACzC2C,MAAK,SAACC,GACDA,EACF/C,EAAU+C,GAEV9C,GAAYA,EAAS,SAGxB+C,OAAM,SAACC,GACN/C,GAAWA,EAAQ+C,OAZ3B,UAgBG5C,GAAYA,GACXA,GAAY,0BEpEL6C,MA/Df,WACE,OACE,sBAAKC,GAAG,OAAR,UACE,wDACA,8FACA,4CACA,gFAEE,mBAAGC,KAAK,0GAAR,0CAFF,6RASiB,IACf,mBAAGA,KAAK,wEAAR,kBAEK,IAZP,iEAcE,uBAdF,mEAiBA,yDACA,4HAIA,uCACA,yEAEA,cAAC,EAAD,CACErD,SAAS,uCACTI,OAAO,QACPC,aAAa,EACbJ,UAAW,SAAC+C,GACVM,MAAMC,KAAKC,UAAUR,KAEvB9C,SAAU,SAAC8C,GACTM,MAAMC,KAAKC,UAAUR,KARzB,SAWE,kDAGF,qBAAKnC,IAAK4C,EAAMC,IAAI,gCAAgCC,MAAM,QAC1D,gDACY,sBAAMC,MAAO,CAAEC,MAAM,OAArB,0BADZ,cAEE,8BACE,mBAAGC,UAAU,cAAcF,MAAO,CAAEC,MAAM,aAD5C,OAGE,mBAAGR,KAAK,6BAAR,oBAEF,8BACE,mBAAGS,UAAU,kBADf,OAGE,mBAAGT,KAAK,iCAAR,8BC9CKU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9D,SAAS+D,eAAe,SAM1BX,K","file":"static/js/main.02b4d1de.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sample.6c6b8c34.svg\";","import * as React from \"react\";\n\nimport { appendScript, removeScript } from \"./utils\";\n\nexport type ReactOneDriveProps = {\n  clientID: string;\n  children?: React.ReactNode;\n  multiSelect: boolean;\n  onSuccess: (result: OneDriveResult | null) => void;\n  onCancel?: (result: OneDriveResult | null) => void;\n  action?: \"download\" | \"share\" | \"query\";\n  onError?: (reason: any) => void;\n};\n\nexport type OneDriveResult = {\n  value: OneDriveFile[];\n  webUrl: string | null;\n};\n\nexport type OneDriveFile = {\n  \"@microsoft.graph.downloadUrl\": string;\n  \"thumbnails@odata.context\": string;\n  id: string;\n  name: string;\n  size: number;\n  thumbnails: Thumbnails[];\n  webUrl: string;\n};\n\nexport type Thumbnails = {\n  id: string;\n  large: Thumbnail;\n  medium: Thumbnail;\n  small: Thumbnail;\n};\n\nexport type Thumbnail = {\n  height: number;\n  width: number;\n  url: string;\n};\n\nexport type OneDriveOpenOptions = {\n  clientId: string;\n  action: \"download\" | \"share\" | \"query\";\n  multiSelect: boolean;\n  openInNewWindow: boolean;\n  advanced: {\n    filter?: string;\n    queryParameters?: string;\n    redirectUri?: string;\n    endpointHint?: string;\n    accessToken?: string;\n    loginHint?: any;\n    isConsumerAccount?: any;\n    scopes?: any;\n    navigation?: any;\n    createLinkParameters?: { type: string; scope: string };\n  };\n  success(result: OneDriveResult): void;\n  cancel(): void;\n  error(e: any): void;\n};\n\nexport interface OneDrivePicker {\n  open(options: OneDriveOpenOptions): any;\n}\n\ndeclare var OneDrive: OneDrivePicker;\n\nconst launchOneDrivePicker = (\n  oneDriveApplicationId: string,\n  multiSelect: boolean,\n  advancedOptions?: any,\n  action?: \"download\" | \"share\" | \"query\"\n) => {\n  return new Promise<OneDriveResult | null>((resolve, reject) => {\n    var odOptions: OneDriveOpenOptions = {\n      clientId: oneDriveApplicationId,\n      action: action || \"download\",\n      multiSelect: multiSelect,\n      openInNewWindow: true,\n      advanced: advancedOptions || {},\n      success: (files: OneDriveResult): void => {\n        resolve(files);\n      },\n      cancel: () => {\n        resolve(null);\n      },\n      error: (e: any): void => {\n        reject(e);\n      },\n    };\n\n    OneDrive.open(odOptions);\n  });\n};\n\nconst ReactOneDriveFilePicker: React.FC<ReactOneDriveProps> = ({\n  clientID,\n  onSuccess,\n  onCancel,\n  onError,\n  action,\n  multiSelect,\n  children,\n}) => {\n  React.useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      appendScript(\"https://js.live.net/v7.2/OneDrive.js\");\n    }\n    return () => {\n      mounted = false;\n      removeScript(\"https://js.live.net/v7.2/OneDrive.js\");\n    };\n  }, [clientID]);\n  return (\n    <div\n      onClick={(e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        e.preventDefault();\n        launchOneDrivePicker(clientID, multiSelect, action)\n          .then((result: OneDriveResult | null) => {\n            if (result) {\n              onSuccess(result);\n            } else {\n              onCancel && onCancel(null);\n            }\n          })\n          .catch((reason: any) => {\n            onError && onError(reason);\n          });\n      }}\n    >\n      {children && children}\n      {!children && \"Open With One Drive\"}\n    </div>\n  );\n};\n\nexport default ReactOneDriveFilePicker;\n","export const appendScript = (scriptToAppend: string) => {\n  const script = document.createElement(\"script\");\n  script.src = scriptToAppend;\n  script.async = true;\n  document.body.appendChild(script);\n};\n\nexport const removeScript = (scriptToremove: string) => {\n  let allsuspects = document.getElementsByTagName(\"script\");\n  for (let i = allsuspects.length; i >= 0; i--) {\n    if (\n      allsuspects[i] &&\n      allsuspects[i].getAttribute(\"src\") !== null &&\n      allsuspects[i].getAttribute(\"src\")?.indexOf(`${scriptToremove}`) !== -1\n    ) {\n      allsuspects[i].parentNode?.removeChild(allsuspects[i]);\n    }\n  }\n};\n","import React from \"react\";\nimport logo from \"./sample.svg\";\nimport { ReactOneDriveFilePicker } from \"./components\";\n\nfunction App() {\n  return (\n    <div id=\"demo\">\n      <h1>React One drive picker</h1>\n      <p>This component is using the iframe window to open the picker.</p>\n      <h2>Motivation</h2>\n      <p>\n        I have gone through the microsoft onedrive &nbsp;\n        <a href=\"https://docs.microsoft.com/en-us/onedrive/developer/controls/file-pickers/react/?view=odsp-graph-online\">\n          documentation for react &nbsp;\n        </a>\n        and I tried to folow what they have mention in documentation.\n        Unfortunately I havnt get luck to setup react-application with\n        FileBrowser as they mentioned. My intention is to access both sharepoint\n        sites and personal onedrive using same file picker.I found one simple\n        implementation{\" \"}\n        <a href=\"https://www.meziantou.net/using-onedrive-file-picker-in-a-website.htm\">\n          here\n        </a>{\" \"}\n        which seems pretty straight forward and enough for my usecase.\n        <br />\n        If you have any other bugs or suggestions please let us know.\n      </p>\n      <h2>Implementation Strategy</h2>\n      <p>\n        Nothing special, just add simple wrapper and exposing the callbacks from\n        the picker window.\n      </p>\n      <h2>Demo </h2>\n      <p>the following is my demo implementation </p>\n\n      <ReactOneDriveFilePicker\n        clientID=\"c3e71009-3dd7-4fc8-9127-2de5ac14c89f\"\n        action=\"share\"\n        multiSelect={true}\n        onSuccess={(result) => {\n          alert(JSON.stringify(result));\n        }}\n        onCancel={(result) => {\n          alert(JSON.stringify(result));\n        }}\n      >\n        <button>Click Here</button>\n      </ReactOneDriveFilePicker>\n\n      <img src={logo} alt=\"react-onedrive-implementation\" width=\"450\" />\n      <footer>\n        Made with <span style={{ color: `red` }}>❤️</span> by EzySign\n        <p>\n          <i className=\"fa fa-globe\" style={{ color: `#00b4ff` }} />\n          &nbsp;\n          <a href=\"http://ezysign.cc/#contact\">Web</a>\n        </p>\n        <p>\n          <i className=\"fab fa-github\" />\n          &nbsp;\n          <a href=\"http://github.com/winhtaikaung\">Github</a>\n        </p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}